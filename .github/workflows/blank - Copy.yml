name: Test install dotnet locally

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set NuGet packages folder path
        run: echo "NUGET_PACKAGES_PATH=${{ runner.temp }}\.nuget\packages" >> $GITHUB_ENV
        
      - name: Create NuGet packages folder
        run: |
          if (-not (Test-Path "$env:NUGET_PACKAGES_PATH")) {
            New-Item -ItemType Directory -Path "$env:NUGET_PACKAGES_PATH" | Out-Null
          }

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'
          cache: true
          cache-dependency-path: |
            **/*.csproj
            **/*.sln
        env:
          DOTNET_INSTALL_DIR: ${{ runner.tool_cache }}/dotnet
          NUGET_PACKAGES: ${{ env.NUGET_PACKAGES_PATH }}
          
      - name: Verify dotnet
        run: dotnet --list-sdks

      # - name: Set up runner-local .NET folder
        # shell: powershell
        # run: |
          # # Use runner's tool cache folder
          # $InstallDir = Join-Path $env:RUNNER_TOOL_CACHE "dotnet"

          # # Ensure folder exists
          # if (-not (Test-Path $InstallDir)) { New-Item -ItemType Directory -Path $InstallDir | Out-Null }

          # # Set DOTNET_ROOT and prepend PATH for the rest of the job
          # echo "DOTNET_ROOT=$InstallDir" >> $env:GITHUB_ENV
          # echo "PATH=$InstallDir;$env:PATH" >> $env:GITHUB_ENV

      # - name: Install .NET 8 locally
        # shell: powershell
        # run: |
          # $DotnetVersion = "8.0.100"
          # $InstallDir = $env:DOTNET_ROOT
          # $ScriptPath = "$env:TEMP\dotnet-install.ps1"

          # # Download install script
          # Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile $ScriptPath

          # # Install .NET 8 locally
          # & $ScriptPath -Version $DotnetVersion -InstallDir $InstallDir

          # # Verify installation
          # dotnet --version
          # dotnet --list-sdks

      - name: Restore dependencies
        shell: powershell
        run: dotnet restore

      - name: Build
        shell: powershell
        run: dotnet build --configuration Release

      - name: Run tests
        shell: powershell
        run: dotnet test --no-build
